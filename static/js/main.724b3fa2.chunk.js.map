{"version":3,"sources":["FeedBack/FeedbackOption/FeedbackOption.js","FeedBack/Section-title/SectionTitle.js","FeedBack/Notification/Notification.js","FeedBack/Statistics/Statistics.js","FeedBack/FeedBack.js","App.js","index.js","FeedBack/Notification/Notification.module.css","FeedBack/FeedBack.module.css","FeedBack/FeedbackOption/FeedbackOptions.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","index","className","s","btn","type","onClick","Section","title","children","Notification","message","container","notify","Statistics","good","neutral","bad","total","positivePercentage","FeedBack","state","OnIncrement","setState","prevState","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","percentage","Math","round","this","arr","keys","wrapper","FeedbackOption","Component","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQA2BeA,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAACC,EAAQC,GACpB,OACE,wBACEC,UAAWC,IAAEC,IAEbC,KAAK,SACLC,QAAS,kBAAMR,EAAgBE,IAJjC,SAMGA,GAJIC,SCKFM,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,M,gBCSQC,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,qBAAKT,UAAWC,IAAES,UAAlB,SACE,mBAAGV,UAAWC,IAAEU,OAAhB,SAAyBF,OCsBhBG,EA1BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,kCACE,sBAAKjB,UAAU,QAAf,UACE,oBAAGA,UAAU,QAAb,oBAA6Ba,KAC7B,oBAAGb,UAAU,QAAb,sBAA+Bc,EAA/B,OACA,oBAAGd,UAAU,QAAb,kBAA2Be,KAC3B,oBAAGf,UAAU,cAAb,oBAAmCgB,KACnC,oBAAGhB,UAAU,WAAb,gCAA4CiB,EAA5C,aCyDOC,E,4MA5DbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,YAAc,SAACzB,GACb,EAAK0B,UAAS,SAACC,GAAD,sBACX3B,EAAU2B,EAAU3B,GAAW,O,EAIpC4B,mBAAqB,WAKnB,OAJoBC,OAAOC,OAAO,EAAKN,OAAOO,QAC5C,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IACtB,I,EAKJC,gCAAkC,WAChC,IAAMC,EAAaC,KAAKC,MACrB,EAAKb,MAAMN,KAAO,EAAKU,qBAAwB,KAElD,OAAOO,GAAc,EAAIA,EAAa,G,uDAG9B,IAAD,EACwBG,KAAKd,MAA5BN,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBmB,EAAMV,OAAOW,KAAKF,KAAKd,OAEvBH,EAAQiB,KAAKV,qBACbN,EAAqBgB,KAAKJ,kCAEhC,OACE,qBAAK7B,UAAWC,IAAEmC,QAAlB,SACE,eAAC,EAAD,CAAS9B,MAAM,uBAAf,UACE,cAAC+B,EAAD,CAAiB1C,QAASuC,EAAKtC,gBAAiBqC,KAAKb,cAErD,oBAAIpB,UAAU,UAAd,wBAECiB,EAAqB,EACpB,cAAC,EAAD,CACEJ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcR,QAAQ,oBAAtB,wC,GAnDW6B,aCIRC,MARf,WACE,OACE,qBAAKvC,UAAU,MAAf,SACE,cAAC,EAAD,OCANwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,UAAY,gCAAgC,OAAS,+B,kBCAvED,EAAOC,QAAU,CAAC,QAAU,4B,kBCA5BD,EAAOC,QAAU,CAAC,IAAM,gC","file":"static/js/main.724b3fa2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map((option, index) => {\r\n        return (\r\n          <button\r\n            className={s.btn}\r\n            key={index}\r\n            type=\"button\"\r\n            onClick={() => onLeaveFeedback(option)}\r\n          >\r\n            {option}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  FeedbackOptions: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <div className={s.container}>\r\n      <p className={s.notify}>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <section>\r\n      <div className=\"stats\">\r\n        <p className=\"title\">Goood: {good}</p>\r\n        <p className=\"title\">Natural: {neutral} </p>\r\n        <p className=\"title\">Bad: {bad}</p>\r\n        <p className=\"totalAmount\">Total: {total}</p>\r\n        <p className=\"feedback\">Positive feedback: {positivePercentage}%</p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  Statistics: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      good: PropTypes.string.isRequired,\r\n      neutral: PropTypes.string.isRequired,\r\n      bad: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  total: PropTypes.func,\r\n  positivePercentage: PropTypes.func,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\r\nimport s from \"./FeedBack.module.css\";\r\nimport FeedbackOptions from \"./FeedbackOption/FeedbackOption\";\r\nimport Section from \"./Section-title/\";\r\nimport Notification from \"./Notification\";\r\nimport Statistics from \"./Statistics\";\r\n\r\nclass FeedBack extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  OnIncrement = (options) => {\r\n    this.setState((prevState) => ({\r\n      [options]: prevState[options] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const totalAmount = Object.values(this.state).reduce(\r\n      (acc, value) => acc + value,\r\n      0\r\n    );\r\n    return totalAmount;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const percentage = Math.round(\r\n      (this.state.good / this.countTotalFeedback()) * 100\r\n    );\r\n    return percentage >= 0 ? percentage : 0;\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const arr = Object.keys(this.state);\r\n\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage();\r\n\r\n    return (\r\n      <div className={s.wrapper}>\r\n        <Section title=\"Please live feedback\">\r\n          <FeedbackOptions options={arr} onLeaveFeedback={this.OnIncrement} />\r\n\r\n          <h2 className=\"heading\">Statistics</h2>\r\n\r\n          {positivePercentage > 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercentage={positivePercentage}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\">\r\n              No feedback given\r\n            </Notification>\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedBack;\r\n","import React from \"react\";\nimport FeedBack from \"./FeedBack\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FeedBack />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notification_container__1SWnQ\",\"notify\":\"Notification_notify__1K1Ov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FeedBack_wrapper__3VVNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__3y1Sj\"};"],"sourceRoot":""}